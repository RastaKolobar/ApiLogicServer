Creation tests
==============

cd tests/creation_tests
sh create-servers.sh venv  # rebuilds the venv
# follow directions to pip install

run each script below, verify app and swagger


    pip
    ===

    sh create-servers.sh create  # rebuilds ApiLogicProject, classicmodels, postgres, sqlserver
    
    test the servers
        
        use vsc to run each api_logic_server_run.py (Launch Config: Python: Current File)


    docker
    ======

    cd ~/dev/servers/install/ApiLogicServer/dockers
    docker run -it --name api_logic_server --rm --net dev-network -p 5656:5656 -p 5002:5002 -v ${PWD}:/localhost apilogicserver/api_logic_server

    (at cd ~/dev/ApiLogicServer/tests/creation_tests)
    sh create-dockers.sh go
    # copy/paste the "run this in docker: sh /localhost/docker-commands.sh"
    # should see the following projects in ~/dev/servers/install/ApiLogicServer/dockers:
        ApiLogicServer chinook  classicmodels	docker-commands.sh  postgres  sakila  sqlserver

    then, in Docker terminal, for <each dockers project>...
        cd /localhost/<each dockers project>
        python api_logic_server_run.py

    and, verify that it works in vscode
        exit the docker container
        cd ~/dev/servers/install/ApiLogicServer/dockers
        code ApiLogicServer


    exit the docker container


Logic - Sample
==============

Run Launch-Config: 0 - Create and Run
cd tests/sample_tests
sh sample_tests.sh go


Logic - Allocation
==================

cd ~/dev/ApiLogicServer/tests/allocation_test  # runs from dev env (no venv)
sh setup_allocation.sh create  # creates/starts server, then follow directions to run test...

cd ~/dev/servers/install/ApiLogicServer/Allocation/test  # ../../../servers/install/ApiLogicServer/Allocation/test
sh test.sh  # verifies tests/results.txt, console should say pass
# stop server



Rebuild-from-model
==================

cd /Users/val/dev/servers/install/ApiLogicServer
ApiLogicServer rebuild-from-model --project_name=ApiLogicProject --db_url=
ApiLogicServer rebuild-from-model --project_name=/localhost/ApiLogicProject-d --db_url=

cd /Users/val/dev/servers/install/ApiLogicServer/ApiLogicProject
ApiLogicServer rebuild-from-model --project_name=./ --db_url=Allocation/database/db-sqlite

/Users/val/dev/servers/install/ApiLogicServer
ApiLogicServer rebuild-from-model --project_name=Allocation --db_url=/Users/val/dev/servers/install/ApiLogicServer/Allocation/database/db.sqlite

Sakalia -insert on category (tiny), city (small), inventory (medium)

        {
            "name": "Rebuild from Model",
            "type":  "python",
            "request": "launch",
            "preLaunchTask": "rebuild-from-model",
            "console": "integratedTerminal"
        }


Platforms
=========

Create, test admin + swagger, Behave:

    Windows: ApiLogicServer, for pip and docker

    Linux: ApiLogicServer