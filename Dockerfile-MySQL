# docker build -t apilogicserver/mysql --file Dockerfile-MySQL --rm .
# docker run --name mysql-container --net dev-network -p 3306:3306 -d -e MYSQL_ROOT_PASSWORD=p apilogicserver/mysql

#    mysql --user root --password
#    paste test data, create admin

#    echo on
#    echo 'Creating Admin Tables'
#    cd /local/servers/classicmodels
#    export PYTHONPATH="/local/servers/classicmodels"
#    # source venv/bin/activate
#    cd ui/basic_web_app
#    export FLASK_APP=app
#    flask fab create-admin --username=admin --firstname="AdminFirst" --lastname=AdminLast --email=admin@apilogicserver.com --password=p

# docker tag apilogicserver/mysql apilogicserver/api_logic_server:version3.0.2
# docker push apilogicserver/api_logic_server
#
# docker commit mysql-container mysql-image
# docker tag mysql-image apilogicserver/mysql8.0:version1.0.6
# docker push apilogicserver/mysql8.0:version1.0.6

# docker run --name mysql-testdbs --net dev-network -p 3306:3306 -d -e MYSQL_ROOT_PASSWORD=p apilogicserver/mysql8.0:version1.0.6
# mysql+pymysql://root:p@mysql-container:3306/classicmodels
# eg,  ApiLogicServer create --project_name=/local/servers/classicmodels --db_url=mysql+pymysql://root:p@mysql-container:3306/classicmodels

# thanks - https://medium.com/@stevenlandow/persist-share-dev-mysql-data-in-a-docker-image-with-commit-f9aa9910be0a

FROM mysql:8.0

RUN mkdir /var/lib/mysql-no-volume
CMD ["--datadir", "/var/lib/mysql-no-volume"]