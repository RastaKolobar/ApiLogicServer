# create a SqlSvr that stores data in the container, not a volume

# ref: https://www.microsoft.com/en-us/sql-server/developer-get-started/python/mac

# sudo docker pull mcr.microsoft.com/mssql/server
# x docker run -e 'HOMEBREW_NO_ENV_FILTERING=1' -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=posey386!' -p 1433:1433 -d microsoft/mssql-server-linux
# x docker run -e 'HOMEBREW_NO_ENV_FILTERING=1' -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=posey386!' -p 1433:1433 -d mcr.microsoft.com/mssql/server
# docker run --name sqlsvr -e 'HOMEBREW_NO_ENV_FILTERING=1' -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=posey386!' -p 1433:1433 -d mcr.microsoft.com/mssql/server


# Now set up your sqlsvr database

#    northwind - thanks, Doug: https://douglaskline.blogspot.com/2020/09/restoring-sql-server-db-backup-to.html
#       paste test data from tests/sql_server/sampleDB.sql
#    SampleDB
#       from tests/sql_server/sampleDB.sql


# Now convert container to image

# docker commit sqlsvr sqlsvr-image
# docker tag sqlsvr-image apilogicserver/sqlsvr:version1.0.0
# docker push apilogicserver/sqlsvr:version1.0.0


# accessing it...
# docker run --name sqldvr-container --net dev-network -p 1433:1433 -d apilogicserver/sqlsvr:version1.0.0
# ApiLogicServer create --project_name=/local/servers/classicmodels --db_url=mysql+pymysql://root:p@mysql-container:3306/classicmodels
